{
  "compilerOptions": {
    "target": "esnext", // Specify ECMAScript target version
    "lib": ["dom", "dom.iterable", "esnext"], // List of library files to be included in the compilation
    "typeRoots": ["node_modules/@types"],
    "allowJs": true, // Allow JavaScript files to be compiled
    "checkJs": false, // Report errors in .js files.
    "noEmit": true, // TS Compiler will not emit JS files
    "baseUrl": "src",
    "jsx" : "react",
    "paths": {
    },
    "sourceMap": true, // enables the use of source maps for debuggers and error reporting etc
    "sourceRoot": "/", // Specify the location where a debugger should locate TypeScript files instead of relative source locations.

    // Strict Checks
    "alwaysStrict": true, // Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file.
    "allowUnreachableCode": false, // pick up dead code paths
    "noImplicitAny": true, // In some cases where no type annotations are present, TypeScript will fall back to a type of any for a variable when it cannot infer the type.
    "strictNullChecks": true, // When strictNullChecks is true, null and undefined have their own distinct types and you’ll get a type error if you try to use them where a concrete value is expected.

    // Linter Checks
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true, // accessing index must always check for undefined
    "noUnusedLocals": true, // Report errors on unused local variables.
    "noUnusedParameters": true, // Report errors on unused parameters in functions
    "allowSyntheticDefaultImports": true
  },
  "include": [
    "src/**/*" // *** The files TypeScript should type check ***
  ],
  "exclude": ["node_modules", "build"] // *** The files to not type check ***
}